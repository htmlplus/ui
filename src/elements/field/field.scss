@import 'field.global';
@import 'field.variables';

// TODO
@mixin outer($area) {
  grid-area: $area;
  display: flex;
  flex-wrap: nowrap;

  // new
  align-self: stretch;
  align-items: center;
}
@mixin inner($ltr) {
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translate(0, -50%);
  @if $ltr {
    left: 0;
  } @else {
    right: 0;
  }
  display: flex;
  flex-wrap: nowrap;
}
@mixin ttttt($area) {
  grid-area: $area;
  display: flex;
  flex-wrap: nowrap;
}

:host {
  display: grid;
  align-items: center;
  grid-template:
    ' . header . '
    'before control after'
    ' . footer . ';
  grid-template-columns: auto 1fr auto;
  grid-template-rows: auto auto auto;
}

[part='before'] {
  @include outer(before);
}

[part='header'] {
  @include ttttt(header);
}

[part='start'] {
  @include inner(true);
}

[part='label'] {
  grid-area: header;

  // TODO
  margin-bottom: 0.5rem;
}

[part='control'] {
  grid-area: control;
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  // border: $border;
  // border-radius: $border-radius;

  // TODO
  position: relative;
  --plus-field-control-start-offset: this-offset-start;
  --plus-field-control-end-offset: this-offset-end;
}

[part='input'] {
  flex-grow: 1;
  width: 100%;

  // TODO
  border-radius: inherit;
  display: block;
}

[part='end'] {
  @include inner(false);
}

[part='footer'] {
  @include ttttt(footer);
}

[part='after'] {
  @include outer(after);
}

///////////////////////// TODO /////////////////////////////////////////////////

:host(:not([dense])) {
  margin-bottom: 1rem;
}
[part='error'] {
  grid-area: footer;
  display: block;
}
[part='hint'] {
  grid-area: footer;
  display: block;
}
[part='success'] {
  grid-area: footer;
  display: block;
}
[part='action'] > svg {
  display: block;
}
[part='input'] {
  display: flex;
  this-sa-asas: dsd;
}

[part='input'] ::slotted(input[type='color']) {
  // display: block;
  // width: 100%;
  // box-sizing: border-box;
}

// [part='input'] {
//   &::slotted(
//       :where(
//           input[type='color'],
//           input[type='date'],
//           input[type='datetime'],
//           input[type='datetime-local'],
//           input[type='email'],
//           input[type='file'],
//           input[type='month'],
//           input[type='number'],
//           input[type='password'],
//           input[type='range'],
//           input[type='search'],
//           input[type='tel'],
//           input[type='text'],
//           input[type='time'],
//           input[type='url'],
//           input[type='week'],
//           select,
//           textarea
//         )
//     ) {
//     // border-radius: $border-radius;
//     display: block;
//     //     border: none;
//     width: 100%;
//     box-sizing: border-box;
//     padding-inline-start: calc(var(--plus-field-control-start-offset) + 0.5rem);
//     padding-inline-end: calc(var(--plus-field-control-end-offset) + 0.5rem);
//   }
//   //   &::slotted(*:focus-visible) {
//   //     outline: none;
//   //   }
// }
// :host([focused]) [part='control'] {
//   border-color: #90b5e2;
//   outline: 0;
//   box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);
//   z-index: 3; // TODO
// }
::slotted(:where(this-tiles)) {
  border-radius: 0;
}
.after,
::slotted([slot='before']) {
  border-end-end-radius: 0;
  border-start-end-radius: 0;
}
.before,
::slotted([slot='after']) {
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}
[part='error'] {
  color: red;
}
[part='success'] {
  color: green;
}
:host([state='valid']) [part='control'] {
  border-color: green;
}
:host([state='invalid']) [part='control'] {
  border-color: red;
}
