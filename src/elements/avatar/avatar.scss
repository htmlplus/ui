:host {
  // @Property() Used to adjust the color.
  --plus-avatar-color: gray;

  // @Property() Used to adjust the size (width & height).
  --plus-avatar-size: #{map-get($avatar-sizes, md)};
}

:host {
  color: $avatar-color;
  background-color: $avatar-background-color;
  border-radius: $avatar-border-radius;
  height: $avatar-size;
  width: $avatar-size;
  align-items: center;
  display: inline-flex;
  justify-content: center;
  position: relative;
  text-align: center;
  text-transform: uppercase;
  user-select: none;
  vertical-align: middle;
}

:host([shape='circle']) {
  border-radius: 50%;
}

:host([shape='round']) {
  border-radius: $avatar-border-radius;
}

:host([shape='tile']) {
  border-radius: 0;
}

@each $key, $value in $avatar-sizes {
  :host([size='#{$key}']) {
    --plus-avatar-size: #{$value};
  }
}

// TODO: Experimental

slot[name] {
  display: block;
  position: absolute;
}

slot:not([name]) {
  border-radius: inherit;
  font-size: $avatar-font-size;
}

::slotted(a) {
  position: absolute;
  inset: 0;
}

::slotted(:not([slot]):not(plus-icon)) {
  border-radius: inherit;
  height: 100%;
  width: 100%;
}

::slotted(plus-avatar) {
  border: $avatar-border;
}
