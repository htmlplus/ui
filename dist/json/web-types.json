{
  "$schema": "http://json.schemastore.org/web-types",
  "name": "@htmlplus/ui",
  "version": "1.4.0",
  "description-markup": "markdown",
  "framework-config": {
    "enable-when": {
      "node-packages": [
        "@htmlplus/ui"
      ]
    }
  },
  "contributions": {
    "html": {
      "elements": [
        {
          "name": "plus-accordion",
          "doc-url": "https://www.htmlplus.io/javascript/element/accordion",
          "js": {
            "events": [
              {
                "name": "plus-collapse",
                "description": "Fires when the element is about to collapse. This event can be [canceled](TODO)."
              },
              {
                "name": "plus-collapsed",
                "description": "Fires after the element has collapsed."
              },
              {
                "name": "plus-expand",
                "description": "Fires when the element is about to expand. This event can be [canceled](TODO)."
              },
              {
                "name": "plus-expanded",
                "description": "Fires after the element has expanded."
              }
            ],
            "properties": [
              {
                "name": "disabled",
                "description": "Disables the element functionality."
              },
              {
                "name": "open",
                "description": "Control the element to expand or not."
              },
              {
                "name": "summary",
                "description": "The summary text displayed on the header."
              },
              {
                "name": "collapse",
                "description": "Collapses the element."
              },
              {
                "name": "expand",
                "description": "Expands the element."
              },
              {
                "name": "toggle",
                "description": "Toggles between `collapse` and `expand` state."
              }
            ]
          },
          "attributes": [
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "Disables the element functionality."
            },
            {
              "name": "open",
              "value": {
                "type": "boolean"
              },
              "description": "Control the element to expand or not."
            },
            {
              "name": "summary",
              "value": {
                "type": "string"
              },
              "description": "The summary text displayed on the header."
            }
          ],
          "description": "A vertically stacked list of headers that reveal or hide associated sections of content.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            },
            {
              "name": "icon",
              "description": "The icon slot."
            },
            {
              "name": "icon-expand",
              "description": "The expand icon slot."
            },
            {
              "name": "icon-collapse",
              "description": "The collapse icon slot."
            },
            {
              "name": "summary",
              "description": "The summary slot."
            },
            {
              "name": "top",
              "description": "The top slot."
            },
            {
              "name": "middle",
              "description": "The middle slot."
            },
            {
              "name": "bottom",
              "description": "The bottom slot."
            }
          ]
        },
        {
          "name": "plus-accordions",
          "doc-url": "https://www.htmlplus.io/javascript/element/accordions",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "persistent",
                "description": "Specifies that only one accordion can be open."
              }
            ]
          },
          "attributes": [
            {
              "name": "persistent",
              "value": {
                "type": "boolean"
              },
              "description": "Specifies that only one accordion can be open."
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-animation",
          "doc-url": "https://www.htmlplus.io/javascript/element/animation",
          "js": {
            "events": [
              {
                "name": "plus-cancel",
                "description": "Fires when the [Animation.cancel()](https://mdn.io/animation-cancel) method is called or when the animation enters the \"`idle`\" play state from another state."
              },
              {
                "name": "plus-finish",
                "description": "Fires when the animation finishes playing."
              },
              {
                "name": "plus-remove",
                "description": "Fires when the animation is removed (i.e., put into an `active` replace state)."
              }
            ],
            "properties": [
              {
                "name": "composite",
                "default": "'replace'",
                "description": "Determines how values are combined between this animation and other, separate animations that do not specify their own specific composite operation."
              },
              {
                "name": "delay",
                "default": "0",
                "description": "The number of milliseconds to delay the start of the animation."
              },
              {
                "name": "direction",
                "default": "'normal'",
                "description": "Whether the animation runs forwards (`normal`), backwards (`reverse`), switches direction after each iteration (`alternate`), or runs backwards and switches direction after each iteration (`alternate-reverse`)."
              },
              {
                "name": "duration",
                "default": "1000",
                "description": "The number of milliseconds each iteration of the animation takes to complete. Keep in mind that your animation will not run if this value is 0."
              },
              {
                "name": "easing",
                "default": "'linear'",
                "description": "The rate of the animation's change over time. Accepts the pre-defined values \"`linear`\", \"`ease`\", \"`ease-in`\", \"`ease-out`\", and \"`ease-in-out`\", or a custom \"`cubic-bezier`\" value like \"`cubic-bezier(0.42, 0, 0.58, 1)`\"."
              },
              {
                "name": "endDelay",
                "default": "0",
                "description": "The number of milliseconds to delay after the end of an animation. This is primarily of use when sequencing animations based on the end time of another animation."
              },
              {
                "name": "fill",
                "default": "'none'",
                "description": "Dictates whether the animation's effects should be reflected by the element(s) prior to playing (\"`backwards`\"), retained after the animation has completed playing (\"`forwards`\"), or `both`."
              },
              {
                "name": "instance",
                "description": "The [Animation](https://mdn.io/api-animation) object instance."
              },
              {
                "name": "iterationComposite",
                "default": "'replace'",
                "description": "Determines how values build from iteration to iteration in this animation. Can be set to `accumulate` or `replace`."
              },
              {
                "name": "iterations",
                "default": "1",
                "description": "The number of times the animation should repeat. And can also take a value of [Infinity](https://mdn.io/infinity) to make it repeat for as long as the element exists."
              },
              {
                "name": "iterationStart",
                "default": "0",
                "description": "Describes at what point in the iteration the animation should start. 0.5 would indicate starting halfway through the first iteration for example, and with this value set, an animation with 2 iterations would end halfway through a third iteration."
              },
              {
                "name": "keyframes",
                "description": "A [keyframes](https://mdn.io/keyframe-formats) object or `null`."
              },
              {
                "name": "name",
                "description": "Specifies what kind of animation will play. The list of available animations is [here](/element/animation/names)."
              },
              {
                "name": "playbackRate",
                "default": "1",
                "description": "Sets the animation's playback rate."
              },
              {
                "name": "run",
                "description": "Starts the animation."
              },
              {
                "name": "cancel",
                "description": "Clears all [keyframeEffects](https://mdn.io/keyframe-effect) caused by this animation and aborts its playback."
              },
              {
                "name": "commitStyles",
                "description": "Commits the end styling state of an animation to the element being animated, even after that animation has been removed. It will cause the end styling state to be written to the element being animated, in the form of properties inside a `style` attribute."
              },
              {
                "name": "finish",
                "description": "Seeks either end of an animation, depending on whether the animation is playing or reversing."
              },
              {
                "name": "pause",
                "description": "Suspends playing of an animation."
              },
              {
                "name": "persist",
                "description": "Explicitly persists an animation, when it would otherwise be removed due to the browser's [Automatically removing filling animations](https://developer.mozilla.org/en-US/docs/Web/API/Animation#automatically_removing_filling_animations) behavior."
              },
              {
                "name": "play",
                "description": "Starts or resumes playing of an animation, or begins the animation again if it previously finished."
              },
              {
                "name": "reverse",
                "description": "Reverses playback direction, stopping at the start of the animation. If the animation is finished or unplayed, it will play from end to beginning."
              },
              {
                "name": "updatePlaybackRate",
                "description": "Sets the speed of an animation after first synchronizing its playback position."
              }
            ]
          },
          "attributes": [
            {
              "name": "composite",
              "value": {
                "type": "'add' | 'accumulate' | 'replace'"
              },
              "default": "'replace'",
              "description": "Determines how values are combined between this animation and other, separate animations that do not specify their own specific composite operation."
            },
            {
              "name": "delay",
              "value": {
                "type": "number"
              },
              "default": "0",
              "description": "The number of milliseconds to delay the start of the animation."
            },
            {
              "name": "direction",
              "value": {
                "type": "'alternate-reverse' | 'alternate' | 'normal' | 'reverse'"
              },
              "default": "'normal'",
              "description": "Whether the animation runs forwards (`normal`), backwards (`reverse`), switches direction after each iteration (`alternate`), or runs backwards and switches direction after each iteration (`alternate-reverse`)."
            },
            {
              "name": "duration",
              "value": {
                "type": "number"
              },
              "default": "1000",
              "description": "The number of milliseconds each iteration of the animation takes to complete. Keep in mind that your animation will not run if this value is 0."
            },
            {
              "name": "easing",
              "value": {
                "type": "string"
              },
              "default": "'linear'",
              "description": "The rate of the animation's change over time. Accepts the pre-defined values \"`linear`\", \"`ease`\", \"`ease-in`\", \"`ease-out`\", and \"`ease-in-out`\", or a custom \"`cubic-bezier`\" value like \"`cubic-bezier(0.42, 0, 0.58, 1)`\"."
            },
            {
              "name": "end-delay",
              "value": {
                "type": "number"
              },
              "default": "0",
              "description": "The number of milliseconds to delay after the end of an animation. This is primarily of use when sequencing animations based on the end time of another animation."
            },
            {
              "name": "fill",
              "value": {
                "type": "'backwards' | 'forwards' | 'none'"
              },
              "default": "'none'",
              "description": "Dictates whether the animation's effects should be reflected by the element(s) prior to playing (\"`backwards`\"), retained after the animation has completed playing (\"`forwards`\"), or `both`."
            },
            {
              "name": "instance",
              "value": {
                "type": "globalThis.Animation"
              },
              "description": "The [Animation](https://mdn.io/api-animation) object instance."
            },
            {
              "name": "iteration-composite",
              "value": {
                "type": "'accumulate' | 'replace'"
              },
              "default": "'replace'",
              "description": "Determines how values build from iteration to iteration in this animation. Can be set to `accumulate` or `replace`."
            },
            {
              "name": "iterations",
              "value": {
                "type": "number"
              },
              "default": "1",
              "description": "The number of times the animation should repeat. And can also take a value of [Infinity](https://mdn.io/infinity) to make it repeat for as long as the element exists."
            },
            {
              "name": "iteration-start",
              "value": {
                "type": "number"
              },
              "default": "0",
              "description": "Describes at what point in the iteration the animation should start. 0.5 would indicate starting halfway through the first iteration for example, and with this value set, an animation with 2 iterations would end halfway through a third iteration."
            },
            {
              "name": "keyframes",
              "value": {
                "type": "Keyframe[]"
              },
              "description": "A [keyframes](https://mdn.io/keyframe-formats) object or `null`."
            },
            {
              "name": "name",
              "value": {
                "type": "string"
              },
              "description": "Specifies what kind of animation will play. The list of available animations is [here](/element/animation/names)."
            },
            {
              "name": "playback-rate",
              "value": {
                "type": "number"
              },
              "default": "1",
              "description": "Sets the animation's playback rate."
            },
            {
              "name": "run",
              "value": {
                "type": "boolean"
              },
              "description": "Starts the animation."
            }
          ],
          "description": "Creates an animation and applies it to the content. Powered by the [Web Animations API](https://mdn.io/web-animations-api). A wide range of animations is available [here](https://www.htmlplus.io/element/animation/names).",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-aspect-ratio",
          "doc-url": "https://www.htmlplus.io/javascript/element/aspect-ratio",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "minHeight",
                "description": "Specifies the minimum height."
              },
              {
                "name": "maxHeight",
                "description": "Specifies the maximum height."
              },
              {
                "name": "value",
                "default": "1",
                "description": "Specifies the ratio."
              }
            ]
          },
          "attributes": [
            {
              "name": "min-height",
              "value": {
                "type": "number | string"
              },
              "description": "Specifies the minimum height."
            },
            {
              "name": "max-height",
              "value": {
                "type": "number | string"
              },
              "description": "Specifies the maximum height."
            },
            {
              "name": "value",
              "value": {
                "type": "number | string"
              },
              "default": "1",
              "description": "Specifies the ratio."
            }
          ],
          "description": "Sets a preferred aspect ratio only for the first child inside the element.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-avatar",
          "doc-url": "https://www.htmlplus.io/javascript/element/avatar",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "color",
                "description": "Specifies the color."
              },
              {
                "name": "shape",
                "description": "Specifies the shape of the element."
              },
              {
                "name": "size",
                "description": "Specifies the size of the element."
              }
            ]
          },
          "attributes": [
            {
              "name": "color",
              "value": {
                "type": "string"
              },
              "description": "Specifies the color."
            },
            {
              "name": "shape",
              "value": {
                "type": "'circle' | 'round' | 'tile'"
              },
              "description": "Specifies the shape of the element."
            },
            {
              "name": "size",
              "value": {
                "type": "'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | (number & {}) | (string & {})"
              },
              "description": "Specifies the size of the element."
            }
          ],
          "description": "An image representing a user's profile picture.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-avatar-group",
          "doc-url": "https://www.htmlplus.io/javascript/element/avatar-group",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "hoverable",
                "description": "Specifies whether to prominent the avatar when the mouse is entered or not."
              },
              {
                "name": "stacked",
                "description": "Specifies whether avatars should be displayed compressed or not."
              }
            ]
          },
          "attributes": [
            {
              "name": "hoverable",
              "value": {
                "type": "boolean"
              },
              "description": "Specifies whether to prominent the avatar when the mouse is entered or not."
            },
            {
              "name": "stacked",
              "value": {
                "type": "boolean"
              },
              "description": "Specifies whether avatars should be displayed compressed or not."
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-breadcrumb",
          "doc-url": "https://www.htmlplus.io/javascript/element/breadcrumb",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "block",
                "description": "TODO."
              },
              {
                "name": "expanderText",
                "default": "'Show path'",
                "description": "Specifies the label for the expander button."
              },
              {
                "name": "offset",
                "default": "1",
                "description": "Specifies the position of the expander button. The expander button is displayed when the number of items reached the maximum limit."
              },
              {
                "name": "max",
                "description": "Specifies the Maximum number of items that are allowed to be displayed."
              },
              {
                "name": "separator",
                "description": "Specifies the separator between items."
              }
            ]
          },
          "attributes": [
            {
              "name": "block",
              "value": {
                "type": "boolean"
              },
              "description": "TODO."
            },
            {
              "name": "expander-text",
              "value": {
                "type": "string"
              },
              "default": "'Show path'",
              "description": "Specifies the label for the expander button."
            },
            {
              "name": "offset",
              "value": {
                "type": "number"
              },
              "default": "1",
              "description": "Specifies the position of the expander button. The expander button is displayed when the number of items reached the maximum limit."
            },
            {
              "name": "max",
              "value": {
                "type": "number"
              },
              "description": "Specifies the Maximum number of items that are allowed to be displayed."
            },
            {
              "name": "separator",
              "value": {
                "type": "string"
              },
              "description": "Specifies the separator between items."
            }
          ],
          "description": "Breadcrumb element is a navigation pattern that shows the actual path of the current page.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            },
            {
              "name": "expander",
              "description": "The expander slot."
            },
            {
              "name": "separator",
              "description": "The separator slot."
            }
          ]
        },
        {
          "name": "plus-browse",
          "doc-url": "https://www.htmlplus.io/javascript/element/browse",
          "js": {
            "events": [
              {
                "name": "plus-change",
                "description": "Fires when file(s) are selected."
              },
              {
                "name": "plus-error",
                "description": "Fires when selected invalid file(s)."
              },
              {
                "name": "plus-success",
                "description": "Fires when file(s) are added successfully."
              }
            ],
            "properties": [
              {
                "name": "accept",
                "description": "One or more [unique file type specifiers](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers) describing file types to allow."
              },
              {
                "name": "disabled",
                "description": "Disables the element functionality."
              },
              {
                "name": "droppable",
                "description": "Adds droppable ability."
              },
              {
                "name": "min",
                "description": "Specifies the minimum number of files."
              },
              {
                "name": "max",
                "description": "Specifies the maximum number of files."
              },
              {
                "name": "minSize",
                "description": "Specifies the minimum size of the file(s) in bytes."
              },
              {
                "name": "maxSize",
                "description": "Specifies the maximum size of the file(s) in bytes."
              },
              {
                "name": "multiple",
                "description": "Allows to select more than one file."
              },
              {
                "name": "browse",
                "description": "Opens the browse dialog."
              }
            ]
          },
          "attributes": [
            {
              "name": "accept",
              "value": {
                "type": "string"
              },
              "description": "One or more [unique file type specifiers](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers) describing file types to allow."
            },
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "Disables the element functionality."
            },
            {
              "name": "droppable",
              "value": {
                "type": "boolean"
              },
              "description": "Adds droppable ability."
            },
            {
              "name": "min",
              "value": {
                "type": "number"
              },
              "description": "Specifies the minimum number of files."
            },
            {
              "name": "max",
              "value": {
                "type": "number"
              },
              "description": "Specifies the maximum number of files."
            },
            {
              "name": "min-size",
              "value": {
                "type": "number"
              },
              "description": "Specifies the minimum size of the file(s) in bytes."
            },
            {
              "name": "max-size",
              "value": {
                "type": "number"
              },
              "description": "Specifies the maximum size of the file(s) in bytes."
            },
            {
              "name": "multiple",
              "value": {
                "type": "boolean"
              },
              "description": "Allows to select more than one file."
            }
          ],
          "description": "Allows you to select file or files by using click or drag & drop functionality.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-card",
          "doc-url": "https://www.htmlplus.io/javascript/element/card",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "elevation",
                "description": "If you want the card to have shadow, use the elevation property, And select the property value between `1` and `24`."
              },
              {
                "name": "flat",
                "description": "Use the flat property to neutralize elevation."
              },
              {
                "name": "outlined",
                "description": "If you want the card to have border, use the outlined property."
              },
              {
                "name": "tile",
                "description": "Use tile property to neutralize border-radius."
              }
            ]
          },
          "attributes": [
            {
              "name": "elevation",
              "value": {
                "type": "1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24"
              },
              "description": "If you want the card to have shadow, use the elevation property, And select the property value between `1` and `24`."
            },
            {
              "name": "flat",
              "value": {
                "type": "boolean"
              },
              "description": "Use the flat property to neutralize elevation."
            },
            {
              "name": "outlined",
              "value": {
                "type": "boolean"
              },
              "description": "If you want the card to have border, use the outlined property."
            },
            {
              "name": "tile",
              "value": {
                "type": "boolean"
              },
              "description": "Use tile property to neutralize border-radius."
            }
          ],
          "description": "Cards contain content and actions about a single subject.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-card-body",
          "doc-url": "https://www.htmlplus.io/javascript/element/card-body",
          "js": {
            "events": [],
            "properties": []
          },
          "attributes": [],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-center",
          "doc-url": "https://www.htmlplus.io/javascript/element/center",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "inline",
                "description": "Converts the `display` CSS property from `flex` to `inline-flex`."
              }
            ]
          },
          "attributes": [
            {
              "name": "inline",
              "value": {
                "type": "boolean"
              },
              "description": "Converts the `display` CSS property from `flex` to `inline-flex`."
            }
          ],
          "description": "Centers content vertically and horizontally.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-click-outside",
          "doc-url": "https://www.htmlplus.io/javascript/element/click-outside",
          "js": {
            "events": [
              {
                "name": "plus-click-outside",
                "description": "Fires when outside of the element is clicked."
              }
            ],
            "properties": [
              {
                "name": "capture",
                "description": "A boolean value indicating that events of this type will be dispatched to the registered `listener` before being dispatched to any `EventTarget` beneath it in the DOM tree."
              },
              {
                "name": "disabled",
                "description": "Disables the element functionality."
              },
              {
                "name": "once",
                "description": "The event fires only once."
              }
            ]
          },
          "attributes": [
            {
              "name": "capture",
              "value": {
                "type": "boolean"
              },
              "description": "A boolean value indicating that events of this type will be dispatched to the registered `listener` before being dispatched to any `EventTarget` beneath it in the DOM tree."
            },
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "Disables the element functionality."
            },
            {
              "name": "once",
              "value": {
                "type": "boolean"
              },
              "description": "The event fires only once."
            }
          ],
          "description": "Detects when a click event happens outside of itself.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-counter",
          "doc-url": "https://www.htmlplus.io/javascript/element/counter",
          "js": {
            "events": [
              {
                "name": "plus-complete",
                "description": "Is Triggered when transition ended."
              }
            ],
            "properties": [
              {
                "name": "easing",
                "default": "'ease-out-expo'",
                "description": "Easing function. Click [here](http://robertpenner.com/easing) for more details."
              },
              {
                "name": "decimal",
                "default": "'.'",
                "description": "Specifies decimal character."
              },
              {
                "name": "decimals",
                "default": "0",
                "description": "Amount of decimals to display."
              },
              {
                "name": "delay",
                "default": "0",
                "description": "Delay in milliseconds before starting the transition."
              },
              {
                "name": "duration",
                "default": "1000",
                "description": "Duration in milliseconds."
              },
              {
                "name": "from",
                "default": "0",
                "description": "Initial value."
              },
              {
                "name": "numerals",
                "description": "Specifies numeral glyph substitution."
              },
              {
                "name": "play",
                "description": "Starts/Stops the transition."
              },
              {
                "name": "separator",
                "description": "Specifies character of thousands separator."
              },
              {
                "name": "to",
                "description": "Target value."
              },
              {
                "name": "complete",
                "description": "Completes the transition."
              },
              {
                "name": "pause",
                "description": "Pauses the transition."
              },
              {
                "name": "start",
                "description": "Starts the transition."
              },
              {
                "name": "stop",
                "description": "Stops the transition."
              }
            ]
          },
          "attributes": [
            {
              "name": "easing",
              "value": {
                "type": "'ease-out-expo' | 'linear'"
              },
              "default": "'ease-out-expo'",
              "description": "Easing function. Click [here](http://robertpenner.com/easing) for more details."
            },
            {
              "name": "decimal",
              "value": {
                "type": "string"
              },
              "default": "'.'",
              "description": "Specifies decimal character."
            },
            {
              "name": "decimals",
              "value": {
                "type": "number"
              },
              "default": "0",
              "description": "Amount of decimals to display."
            },
            {
              "name": "delay",
              "value": {
                "type": "number"
              },
              "default": "0",
              "description": "Delay in milliseconds before starting the transition."
            },
            {
              "name": "duration",
              "value": {
                "type": "number"
              },
              "default": "1000",
              "description": "Duration in milliseconds."
            },
            {
              "name": "from",
              "value": {
                "type": "number"
              },
              "default": "0",
              "description": "Initial value."
            },
            {
              "name": "numerals",
              "value": {
                "type": "string[]"
              },
              "description": "Specifies numeral glyph substitution."
            },
            {
              "name": "play",
              "value": {
                "type": "boolean"
              },
              "description": "Starts/Stops the transition."
            },
            {
              "name": "separator",
              "value": {
                "type": "string"
              },
              "description": "Specifies character of thousands separator."
            },
            {
              "name": "to",
              "value": {
                "type": "number"
              },
              "description": "Target value."
            }
          ],
          "description": "Can be used to quickly create animations that display numerical data in a more interesting way."
        },
        {
          "name": "plus-cropper",
          "doc-url": "https://www.htmlplus.io/javascript/element/cropper",
          "js": {
            "events": [
              {
                "name": "plus-crop",
                "description": "Fires when the `image` or the `viewport` is changed."
              },
              {
                "name": "plus-crop-end",
                "description": "Fires when the `image` or the `viewport` changes are finished."
              },
              {
                "name": "plus-crop-move",
                "description": "Fires when the `image` or the `viewport` is changing."
              },
              {
                "name": "plus-crop-start",
                "description": "Fires when the `image` or the `viewport` starts to change."
              },
              {
                "name": "plus-ready",
                "description": "Fires when the image has been loaded and the element is ready for operation."
              },
              {
                "name": "plus-zoom",
                "description": "Fires when the element starts to `zoom in` or `zoom out`."
              }
            ],
            "properties": [
              {
                "name": "area",
                "default": "0.75",
                "description": "A number between 0 and 1. Specifies the automatic cropping area size."
              },
              {
                "name": "aspectRatio",
                "description": "Specifies the initial aspect ratio of the viewport."
              },
              {
                "name": "background",
                "description": "Shows the grid background of the container."
              },
              {
                "name": "disabled",
                "description": "Disables the element functionality."
              },
              {
                "name": "guides",
                "description": "Shows the dashed lines above the viewport."
              },
              {
                "name": "indicator",
                "description": "Shows the center indicator above the viewport."
              },
              {
                "name": "mode",
                "default": "'move'",
                "description": "Specifies the mode."
              },
              {
                "name": "resizer",
                "default": "'both'",
                "description": "Enables to resize the viewport by dragging (Works when the value of the `mode` property is `crop`)."
              },
              {
                "name": "resizerShape",
                "default": "'square'",
                "description": "Specifies the shape of the resizer."
              },
              {
                "name": "responsive",
                "default": "'reset'",
                "description": "Re-renders when resizing the window."
              },
              {
                "name": "shape",
                "default": "'rectangle'",
                "description": "Specifies the shape of the viewport."
              },
              {
                "name": "src",
                "description": "Specifies the image's src."
              },
              {
                "name": "transparent",
                "description": "Hides the black modal above the image and under the viewport."
              },
              {
                "name": "value",
                "description": "Gets/Sets data."
              },
              {
                "name": "view",
                "default": "'cover'",
                "description": "Specifies the view."
              },
              {
                "name": "zoomable",
                "default": true,
                "description": "Enables to zoom the image."
              },
              {
                "name": "zoomRatio",
                "default": "0.1",
                "description": "Specifies zoom ratio when zooming the image by wheeling the mouse."
              },
              {
                "name": "flipX",
                "description": "Flips horizontally."
              },
              {
                "name": "flipY",
                "description": "Flips vertically."
              },
              {
                "name": "move",
                "description": "Moves the canvas with relative offsets."
              },
              {
                "name": "moveTo",
                "description": "Moves the canvas to an absolute point."
              },
              {
                "name": "reset",
                "description": "Resets the image and viewport to their initial states."
              },
              {
                "name": "rotate",
                "description": "Rotates the image with a relative degree."
              },
              {
                "name": "rotateTo",
                "description": "Rotates the image to an absolute degree."
              },
              {
                "name": "toCanvas",
                "description": "Gets `canvas` from the cropped image."
              },
              {
                "name": "zoom",
                "description": "Zooms the canvas with a relative ratio."
              },
              {
                "name": "zoomTo",
                "description": "Zooms the canvas to an absolute ratio."
              }
            ]
          },
          "attributes": [
            {
              "name": "area",
              "value": {
                "type": "number"
              },
              "default": "0.75",
              "description": "A number between 0 and 1. Specifies the automatic cropping area size."
            },
            {
              "name": "aspect-ratio",
              "value": {
                "type": "number | string"
              },
              "description": "Specifies the initial aspect ratio of the viewport."
            },
            {
              "name": "background",
              "value": {
                "type": "boolean"
              },
              "description": "Shows the grid background of the container."
            },
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "Disables the element functionality."
            },
            {
              "name": "guides",
              "value": {
                "type": "boolean"
              },
              "description": "Shows the dashed lines above the viewport."
            },
            {
              "name": "indicator",
              "value": {
                "type": "boolean"
              },
              "description": "Shows the center indicator above the viewport."
            },
            {
              "name": "mode",
              "value": {
                "type": "'crop' | 'move' | 'none'"
              },
              "default": "'move'",
              "description": "Specifies the mode."
            },
            {
              "name": "resizer",
              "value": {
                "type": "'both' | 'edge' | 'main'"
              },
              "default": "'both'",
              "description": "Enables to resize the viewport by dragging (Works when the value of the `mode` property is `crop`)."
            },
            {
              "name": "resizer-shape",
              "value": {
                "type": "'circle' | 'line' | 'square'"
              },
              "default": "'square'",
              "description": "Specifies the shape of the resizer."
            },
            {
              "name": "responsive",
              "value": {
                "type": "boolean | 'reset'"
              },
              "default": "'reset'",
              "description": "Re-renders when resizing the window."
            },
            {
              "name": "shape",
              "value": {
                "type": "'circle' | 'rectangle' | 'square'"
              },
              "default": "'rectangle'",
              "description": "Specifies the shape of the viewport."
            },
            {
              "name": "src",
              "value": {
                "type": "string"
              },
              "description": "Specifies the image's src."
            },
            {
              "name": "transparent",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the black modal above the image and under the viewport."
            },
            {
              "name": "value",
              "value": {
                "type": "interface CropperValue {\n  rotate?: number;\n  top?: number;\n  left?: number;\n  height?: number;\n  width?: number;\n}"
              },
              "description": "Gets/Sets data."
            },
            {
              "name": "view",
              "value": {
                "type": "'contain' | 'cover' | 'fit' | 'none'"
              },
              "default": "'cover'",
              "description": "Specifies the view."
            },
            {
              "name": "zoomable",
              "value": {
                "type": "boolean | 'touch' | 'wheel'"
              },
              "default": true,
              "description": "Enables to zoom the image."
            },
            {
              "name": "zoom-ratio",
              "value": {
                "type": "number"
              },
              "default": "0.1",
              "description": "Specifies zoom ratio when zooming the image by wheeling the mouse."
            }
          ],
          "description": "Used for cropping large images to fit a container before uploading them to the server."
        },
        {
          "name": "plus-dialog",
          "doc-url": "https://www.htmlplus.io/javascript/element/dialog",
          "js": {
            "events": [
              {
                "name": "plus-close",
                "description": "When the dialog is going to hide"
              },
              {
                "name": "plus-closed",
                "description": "When the dialog is completely closed and its animation is completed."
              },
              {
                "name": "plus-open",
                "description": "When the dialog is going to show this event triggers"
              },
              {
                "name": "plus-opened",
                "description": "When the dialog is completely shown and its animation is completed."
              }
            ],
            "properties": [
              {
                "name": "animation",
                "description": "TODO"
              },
              {
                "name": "connector",
                "description": "This property helps you to attach which dialog toggler controls the dialog. It doesn't matter where the dialog toggler is. You can put the dialog's toggler inside or outside of the dialog. Read more about connectors [here](/connector)."
              },
              {
                "name": "fullHeight",
                "description": "Set the height of the dialog as much as the screen's height."
              },
              {
                "name": "fullWidth",
                "description": "Set the width of the dialog as much as the screen's width."
              },
              {
                "name": "fullscreen",
                "description": "Set both width and height of the dialog to occupy the screen size."
              },
              {
                "name": "keyboard",
                "description": "Closes the dialog when `escape` key is pressed."
              },
              {
                "name": "open",
                "description": "Control dialog to show or not."
              },
              {
                "name": "persistent",
                "description": "It prevents the dialog from closing on clicking outside of the element."
              },
              {
                "name": "placement",
                "default": "'top'",
                "description": "Specifies where to show the dialog box by choosing two values, one for horizontal and another for vertical. Horizontal has a range of `left`, `center`, `right`, `start`, `end`, and vertical values are `top`, `center` and `bottom`."
              },
              {
                "name": "scrollable",
                "description": "It makes the user able to scroll the content by adding a scroll beside it."
              },
              {
                "name": "size",
                "description": "Determine the width of the dialog."
              },
              {
                "name": "sticky",
                "description": "Removes the margin around the dialog's content."
              },
              {
                "name": "transparent",
                "description": "Deactivate the dialog's backdrop to show or not."
              },
              {
                "name": "hide",
                "description": "Hides the element."
              },
              {
                "name": "show",
                "description": "Shows the element."
              },
              {
                "name": "toggle",
                "description": "Toggles between `collapse` and `expand` state."
              }
            ]
          },
          "attributes": [
            {
              "name": "animation",
              "value": {
                "type": "boolean | string"
              },
              "description": "TODO"
            },
            {
              "name": "connector",
              "value": {
                "type": "string"
              },
              "description": "This property helps you to attach which dialog toggler controls the dialog. It doesn't matter where the dialog toggler is. You can put the dialog's toggler inside or outside of the dialog. Read more about connectors [here](/connector)."
            },
            {
              "name": "full-height",
              "value": {
                "type": "boolean"
              },
              "description": "Set the height of the dialog as much as the screen's height."
            },
            {
              "name": "full-width",
              "value": {
                "type": "boolean"
              },
              "description": "Set the width of the dialog as much as the screen's width."
            },
            {
              "name": "fullscreen",
              "value": {
                "type": "boolean | 'sm-down' | 'md-down' | 'lg-down' | 'xl-down' | 'xxl-down'"
              },
              "description": "Set both width and height of the dialog to occupy the screen size."
            },
            {
              "name": "keyboard",
              "value": {
                "type": "boolean"
              },
              "description": "Closes the dialog when `escape` key is pressed."
            },
            {
              "name": "open",
              "value": {
                "type": "boolean"
              },
              "description": "Control dialog to show or not."
            },
            {
              "name": "persistent",
              "value": {
                "type": "boolean"
              },
              "description": "It prevents the dialog from closing on clicking outside of the element."
            },
            {
              "name": "placement",
              "value": {
                "type": "'bottom' | 'center' | 'center-bottom' | 'center-center' | 'center-top' | 'end' | 'end-bottom' | 'end-center' | 'end-top' | 'left' | 'left-bottom' | 'left-center' | 'left-top' | 'right' | 'right-bottom' | 'right-center' | 'right-top' | 'start' | 'start-bottom' | 'start-center' | 'start-top' | 'top'"
              },
              "default": "'top'",
              "description": "Specifies where to show the dialog box by choosing two values, one for horizontal and another for vertical. Horizontal has a range of `left`, `center`, `right`, `start`, `end`, and vertical values are `top`, `center` and `bottom`."
            },
            {
              "name": "scrollable",
              "value": {
                "type": "boolean"
              },
              "description": "It makes the user able to scroll the content by adding a scroll beside it."
            },
            {
              "name": "size",
              "value": {
                "type": "'sm' | 'md' | 'lg' | 'xl'"
              },
              "description": "Determine the width of the dialog."
            },
            {
              "name": "sticky",
              "value": {
                "type": "boolean"
              },
              "description": "Removes the margin around the dialog's content."
            },
            {
              "name": "transparent",
              "value": {
                "type": "boolean"
              },
              "description": "Deactivate the dialog's backdrop to show or not."
            }
          ],
          "description": "A dialog is a `conversation` between the system and the user. It is prompted when the system needs input from the user or to give the user urgent information concerning their current workflow.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-dialog-body",
          "doc-url": "https://www.htmlplus.io/javascript/element/dialog-body",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "scrollable",
                "description": "It makes the user able to scroll the content by adding a scroll beside it."
              }
            ]
          },
          "attributes": [
            {
              "name": "scrollable",
              "value": {
                "type": "boolean"
              },
              "description": "It makes the user able to scroll the content by adding a scroll beside it."
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-dialog-content",
          "doc-url": "https://www.htmlplus.io/javascript/element/dialog-content",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "scrollable",
                "description": "It makes the user able to scroll the content by adding a scroll beside it."
              }
            ]
          },
          "attributes": [
            {
              "name": "scrollable",
              "value": {
                "type": "boolean"
              },
              "description": "It makes the user able to scroll the content by adding a scroll beside it."
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-dialog-footer",
          "doc-url": "https://www.htmlplus.io/javascript/element/dialog-footer",
          "js": {
            "events": [],
            "properties": []
          },
          "attributes": [],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-dialog-header",
          "doc-url": "https://www.htmlplus.io/javascript/element/dialog-header",
          "js": {
            "events": [],
            "properties": []
          },
          "attributes": [],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-dialog-toggler",
          "doc-url": "https://www.htmlplus.io/javascript/element/dialog-toggler",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "connector",
                "description": "This property helps you to attach which dialog this toggler controls. It doesn't matter where the dialog toggler is. You can put the dialog's toggler inside or outside of the dialog. Read more about connectors [here](/connector)."
              }
            ]
          },
          "attributes": [
            {
              "name": "connector",
              "value": {
                "type": "string"
              },
              "description": "This property helps you to attach which dialog this toggler controls. It doesn't matter where the dialog toggler is. You can put the dialog's toggler inside or outside of the dialog. Read more about connectors [here](/connector)."
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            },
            {
              "name": "open",
              "description": "Specifies the content of toggler when it's opened."
            },
            {
              "name": "close",
              "description": "Specifies the content of toggler when it's closed."
            }
          ]
        },
        {
          "name": "plus-divider",
          "doc-url": "https://www.htmlplus.io/javascript/element/divider",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "color",
                "description": "Specifies the color."
              },
              {
                "name": "placement",
                "default": "'center'",
                "description": "Specifies the location of the default slot."
              },
              {
                "name": "width",
                "default": "'md'",
                "description": "Specifies the width of the border."
              },
              {
                "name": "type",
                "default": "'solid'",
                "description": "Specifies the style of the border."
              },
              {
                "name": "variant",
                "default": "'full'",
                "description": "Specifies the amount of indentation."
              },
              {
                "name": "vertical",
                "description": "Draws the divider in a vertical orientation."
              }
            ]
          },
          "attributes": [
            {
              "name": "color",
              "value": {
                "type": "string"
              },
              "description": "Specifies the color."
            },
            {
              "name": "placement",
              "value": {
                "type": "'start' | 'center' | 'end'"
              },
              "default": "'center'",
              "description": "Specifies the location of the default slot."
            },
            {
              "name": "width",
              "value": {
                "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl'"
              },
              "default": "'md'",
              "description": "Specifies the width of the border."
            },
            {
              "name": "type",
              "value": {
                "type": "'dashed' | 'dotted' | 'double' | 'groove' | 'inset' | 'outset' | 'ridge' | 'solid'"
              },
              "default": "'solid'",
              "description": "Specifies the style of the border."
            },
            {
              "name": "variant",
              "value": {
                "type": "'middle' | 'inset' | 'full'"
              },
              "default": "'full'",
              "description": "Specifies the amount of indentation."
            },
            {
              "name": "vertical",
              "value": {
                "type": "boolean"
              },
              "description": "Draws the divider in a vertical orientation."
            }
          ],
          "description": "A thin line that divides the content vertically or horizontally.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-drawer",
          "doc-url": "https://www.htmlplus.io/javascript/element/drawer",
          "js": {
            "events": [
              {
                "name": "plus-close",
                "description": "When the drawer is going to hide"
              },
              {
                "name": "plus-closed",
                "description": "When the drawer is completely closed and its animation is completed."
              },
              {
                "name": "plus-open",
                "description": "When the drawer is going to show this event triggers"
              },
              {
                "name": "plus-opened",
                "description": "When the drawer is completely shown and its animation is completed."
              }
            ],
            "properties": [
              {
                "name": "animation",
                "description": "TODO"
              },
              {
                "name": "backdrop",
                "description": "Activate the drawer's backdrop to show or not. It works when floating is activated."
              },
              {
                "name": "connector",
                "description": "This property helps you to attach which drawer toggler controls the drawer. It doesn't matter where the drawer toggler is. You can put the drawer's toggler inside or outside of the drawer. Read more about connectors [here](/connector)."
              },
              {
                "name": "floating",
                "description": "On default the drawer is considered as a part of the main container. it pushes the other contents on opening. If true it will be opened over other contents and doesn't affect other contents. A floating drawer sits above its application and uses a backdrop to darken the background."
              },
              {
                "name": "mini",
                "description": "Set the width of drawer to the minimum size you specified for the `mini-size` property."
              },
              {
                "name": "miniSize",
                "default": "80",
                "description": "Sets the minimum width size of the drawer."
              },
              {
                "name": "open",
                "description": "Control drawer to show or not."
              },
              {
                "name": "persistent",
                "description": "If true, don't allow the drawer to be closed by clicking outside of the drawer. If false, the drawer will be closed by clicking outside of it."
              },
              {
                "name": "placement",
                "description": "Specifies where the drawer will open."
              },
              {
                "name": "flexible",
                "description": "It controls the flexibility of the drawer's width. If yes, the width of the drawer can be reduced. If false doesn't allow the width of the drawer to reduce."
              },
              {
                "name": "size",
                "default": "280",
                "description": "Determine the width of the drawer."
              },
              {
                "name": "floated",
                "description": "TODO"
              },
              {
                "name": "hide",
                "description": "Hides the element."
              },
              {
                "name": "show",
                "description": "Shows the element."
              },
              {
                "name": "toggle",
                "description": "Toggles between `collapse` and `expand` state."
              }
            ]
          },
          "attributes": [
            {
              "name": "animation",
              "value": {
                "type": "boolean | string"
              },
              "description": "TODO"
            },
            {
              "name": "backdrop",
              "value": {
                "type": "boolean"
              },
              "description": "Activate the drawer's backdrop to show or not. It works when floating is activated."
            },
            {
              "name": "connector",
              "value": {
                "type": "string"
              },
              "description": "This property helps you to attach which drawer toggler controls the drawer. It doesn't matter where the drawer toggler is. You can put the drawer's toggler inside or outside of the drawer. Read more about connectors [here](/connector)."
            },
            {
              "name": "floating",
              "value": {
                "type": "boolean | 'on-xs-down' | 'on-sm-down' | 'on-md-down' | 'on-lg-down'"
              },
              "description": "On default the drawer is considered as a part of the main container. it pushes the other contents on opening. If true it will be opened over other contents and doesn't affect other contents. A floating drawer sits above its application and uses a backdrop to darken the background."
            },
            {
              "name": "mini",
              "value": {
                "type": "boolean"
              },
              "description": "Set the width of drawer to the minimum size you specified for the `mini-size` property."
            },
            {
              "name": "mini-size",
              "value": {
                "type": "number | string"
              },
              "default": "80",
              "description": "Sets the minimum width size of the drawer."
            },
            {
              "name": "open",
              "value": {
                "type": "boolean"
              },
              "description": "Control drawer to show or not."
            },
            {
              "name": "persistent",
              "value": {
                "type": "boolean"
              },
              "description": "If true, don't allow the drawer to be closed by clicking outside of the drawer. If false, the drawer will be closed by clicking outside of it."
            },
            {
              "name": "placement",
              "value": {
                "type": "'start' | 'left' | 'right' | 'end' | 'top' | 'bottom'"
              },
              "description": "Specifies where the drawer will open."
            },
            {
              "name": "flexible",
              "value": {
                "type": "boolean"
              },
              "description": "It controls the flexibility of the drawer's width. If yes, the width of the drawer can be reduced. If false doesn't allow the width of the drawer to reduce."
            },
            {
              "name": "size",
              "value": {
                "type": "number | string"
              },
              "default": "280",
              "description": "Determine the width of the drawer."
            },
            {
              "name": "floated",
              "value": {
                "type": ""
              },
              "description": "TODO"
            }
          ],
          "description": "This element lets you add collapsible side contents like navigation alongside some primary content.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-drawer-toggler",
          "doc-url": "https://www.htmlplus.io/javascript/element/drawer-toggler",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "connector",
                "description": "This property helps you to attach which drawer this toggler controls. It doesn't matter where the drawer toggler is. You can put the drawer's toggler inside or outside of the drawer. Read more about connectors [here](/connector)."
              }
            ]
          },
          "attributes": [
            {
              "name": "connector",
              "value": {
                "type": "string"
              },
              "description": "This property helps you to attach which drawer this toggler controls. It doesn't matter where the drawer toggler is. You can put the drawer's toggler inside or outside of the drawer. Read more about connectors [here](/connector)."
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            },
            {
              "name": "open",
              "description": "Specifies the content of toggler when it's opened."
            },
            {
              "name": "close",
              "description": "Specifies the content of toggler when it's closed."
            }
          ]
        },
        {
          "name": "plus-faker",
          "doc-url": "https://www.htmlplus.io/javascript/element/faker",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "api",
                "default": "'lorem.paragraph'",
                "description": "Specifies the [API](https://fakerjs.dev/api)."
              },
              {
                "name": "arguments",
                "description": "Specifies the API's arguments as an array."
              },
              {
                "name": "instance",
                "description": "The [Faker](https://fakerjs.dev/guide/usage.html) object instance."
              },
              {
                "name": "seed",
                "description": "Keeps the result constant."
              }
            ]
          },
          "attributes": [
            {
              "name": "api",
              "value": {
                "type": "string"
              },
              "default": "'lorem.paragraph'",
              "description": "Specifies the [API](https://fakerjs.dev/api)."
            },
            {
              "name": "arguments",
              "value": {
                "type": "Array<any>"
              },
              "description": "Specifies the API's arguments as an array."
            },
            {
              "name": "instance",
              "value": {
                "type": "FakerCoreType"
              },
              "description": "The [Faker](https://fakerjs.dev/guide/usage.html) object instance."
            },
            {
              "name": "seed",
              "value": {
                "type": "number"
              },
              "description": "Keeps the result constant."
            }
          ],
          "description": "Generates massive amounts of fake (but realistic) data for testing and development. Powered by [Faker](https://fakerjs.dev/)."
        },
        {
          "name": "plus-format-bytes",
          "doc-url": "https://www.htmlplus.io/javascript/element/format-bytes",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "display",
                "default": "'short'",
                "description": "Specifies the unit will be shown as an abbreviation or not."
              },
              {
                "name": "locale",
                "description": "Localizes the result. [More](https://mdn.io/number-format/constructor)."
              },
              {
                "name": "decimals",
                "description": "Specifies the number of decimal places. Use an array to specify the minimum and maximum."
              },
              {
                "name": "separator",
                "default": "' '",
                "description": "Specifies the separator between number and unit."
              },
              {
                "name": "signed",
                "description": "Shows plus sign for positive numbers. If the difference is exactly zero a space character will be prepended instead for better alignment."
              },
              {
                "name": "standard",
                "default": "'METRIC'",
                "description": "Specifies the standard of units. [Metric and IEC](https://wikipedia.org/wiki/Gigabyte) are supported."
              },
              {
                "name": "unit",
                "default": "'auto'",
                "description": "Specifies the unit in which the result will be returned."
              },
              {
                "name": "value",
                "description": "The bytes value to convert."
              }
            ]
          },
          "attributes": [
            {
              "name": "display",
              "value": {
                "type": "'long' | 'short'"
              },
              "default": "'short'",
              "description": "Specifies the unit will be shown as an abbreviation or not."
            },
            {
              "name": "locale",
              "value": {
                "type": "string | string[]"
              },
              "description": "Localizes the result. [More](https://mdn.io/number-format/constructor)."
            },
            {
              "name": "decimals",
              "value": {
                "type": "number | [number, number]"
              },
              "description": "Specifies the number of decimal places. Use an array to specify the minimum and maximum."
            },
            {
              "name": "separator",
              "value": {
                "type": "string"
              },
              "default": "' '",
              "description": "Specifies the separator between number and unit."
            },
            {
              "name": "signed",
              "value": {
                "type": "boolean"
              },
              "description": "Shows plus sign for positive numbers. If the difference is exactly zero a space character will be prepended instead for better alignment."
            },
            {
              "name": "standard",
              "value": {
                "type": "'IEC' | 'IEC_OCTET' | 'METRIC' | 'METRIC_OCTET'"
              },
              "default": "'METRIC'",
              "description": "Specifies the standard of units. [Metric and IEC](https://wikipedia.org/wiki/Gigabyte) are supported."
            },
            {
              "name": "unit",
              "value": {
                "type": "'auto' | 'base' | 'kilo' | 'mega' | 'giga' | 'tera' | 'peta' | 'exa' | 'zetta' | 'yotta'"
              },
              "default": "'auto'",
              "description": "Specifies the unit in which the result will be returned."
            },
            {
              "name": "value",
              "value": {
                "type": "number"
              },
              "description": "The bytes value to convert."
            }
          ],
          "description": "Converts bytes to a human-readable string. [Metric and IEC](https://wikipedia.org/wiki/Gigabyte) standard are supported."
        },
        {
          "name": "plus-grid",
          "doc-url": "https://www.htmlplus.io/javascript/element/grid",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "alignContent",
                "default": "'stretch'",
                "description": "Aligns contents vertically across all rows (It overrides alignItems)."
              },
              {
                "name": "alignContentXs",
                "description": "Aligns contents vertically across all rows for extra-small display sizes (It overrides alignItemsXs)."
              },
              {
                "name": "alignContentSm",
                "description": "Aligns contents vertically across all rows for small display sizes (It overrides alignItemsSm)."
              },
              {
                "name": "alignContentMd",
                "description": "Aligns contents vertically across all rows for medium display sizes (It overrides alignItemsMd)."
              },
              {
                "name": "alignContentLg",
                "description": "Aligns contents vertically across all rows for large display sizes (It overrides alignItemsLg)."
              },
              {
                "name": "alignContentXl",
                "description": "Aligns contents vertically across all rows for extra-large display sizes (It overrides alignItemsXl)."
              },
              {
                "name": "alignContentXxl",
                "description": "Aligns contents vertically across all rows for extra-extra-large display sizes (It overrides alignItemsXXl)."
              },
              {
                "name": "alignItems",
                "default": "'stretch'",
                "description": "Aligns contents vertically inside their own row."
              },
              {
                "name": "alignItemsXs",
                "description": "Aligns contents vertically inside their own row for extra-small display sizes."
              },
              {
                "name": "alignItemsSm",
                "description": "Aligns contents vertically inside their own row for small display sizes."
              },
              {
                "name": "alignItemsMd",
                "description": "Aligns contents vertically inside their own row for medium display sizes."
              },
              {
                "name": "alignItemsLg",
                "description": "Aligns contents vertically inside their own row for large display sizes."
              },
              {
                "name": "alignItemsXl",
                "description": "Aligns contents vertically inside their own row for extra-large display sizes."
              },
              {
                "name": "alignItemsXxl",
                "description": "Aligns contents vertically inside their own row for extra-extra-large display sizes."
              },
              {
                "name": "gutter",
                "description": "Adds a gap between contents to make space between them vertically and horizontally."
              },
              {
                "name": "gutterX",
                "description": "Adds a gap between contents to make space between them horizontally."
              },
              {
                "name": "gutterY",
                "description": "Adds a gap between contents to make space between them vertically."
              },
              {
                "name": "justifyContent",
                "default": "'start'",
                "description": "Justifies contents horizontally."
              },
              {
                "name": "justifyContentXs",
                "description": "Justifies contents horizontally for extra-small display sizes."
              },
              {
                "name": "justifyContentSm",
                "description": "Justifies contents horizontally for small display sizes."
              },
              {
                "name": "justifyContentMd",
                "description": "Justifies contents horizontally for medium display sizes."
              },
              {
                "name": "justifyContentLg",
                "description": "Justifies contents horizontally for large display sizes."
              },
              {
                "name": "justifyContentXl",
                "description": "Justifies contents horizontally for extra-large display sizes."
              },
              {
                "name": "justifyContentXxl",
                "description": "Justifies contents horizontally for extra-extra-large display sizes."
              },
              {
                "name": "reverse",
                "description": "Reverses the flow of contents from left-to-right to right-to-left, or vice-versa."
              },
              {
                "name": "vertical",
                "description": "Changes the flow of contents from left-to-right to top-to-down."
              },
              {
                "name": "wrap",
                "default": "'on'",
                "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width."
              },
              {
                "name": "wrapXs",
                "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for extra-small screen devices."
              },
              {
                "name": "wrapSm",
                "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for small screen devices."
              },
              {
                "name": "wrapMd",
                "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for medium screen devices."
              },
              {
                "name": "wrapLg",
                "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for large screen devices."
              },
              {
                "name": "wrapXl",
                "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for extra-large screen devices."
              },
              {
                "name": "wrapXxl",
                "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for extra-extra-large screen devices."
              }
            ]
          },
          "attributes": [
            {
              "name": "align-content",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch' | 'between' | 'around' | 'evenly'"
              },
              "default": "'stretch'",
              "description": "Aligns contents vertically across all rows (It overrides alignItems)."
            },
            {
              "name": "align-content-xs",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch' | 'between' | 'around' | 'evenly'"
              },
              "description": "Aligns contents vertically across all rows for extra-small display sizes (It overrides alignItemsXs)."
            },
            {
              "name": "align-content-sm",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch' | 'between' | 'around' | 'evenly'"
              },
              "description": "Aligns contents vertically across all rows for small display sizes (It overrides alignItemsSm)."
            },
            {
              "name": "align-content-md",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch' | 'between' | 'around' | 'evenly'"
              },
              "description": "Aligns contents vertically across all rows for medium display sizes (It overrides alignItemsMd)."
            },
            {
              "name": "align-content-lg",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch' | 'between' | 'around' | 'evenly'"
              },
              "description": "Aligns contents vertically across all rows for large display sizes (It overrides alignItemsLg)."
            },
            {
              "name": "align-content-xl",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch' | 'between' | 'around' | 'evenly'"
              },
              "description": "Aligns contents vertically across all rows for extra-large display sizes (It overrides alignItemsXl)."
            },
            {
              "name": "align-content-xxl",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch' | 'between' | 'around' | 'evenly'"
              },
              "description": "Aligns contents vertically across all rows for extra-extra-large display sizes (It overrides alignItemsXXl)."
            },
            {
              "name": "align-items",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch'"
              },
              "default": "'stretch'",
              "description": "Aligns contents vertically inside their own row."
            },
            {
              "name": "align-items-xs",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch'"
              },
              "description": "Aligns contents vertically inside their own row for extra-small display sizes."
            },
            {
              "name": "align-items-sm",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch'"
              },
              "description": "Aligns contents vertically inside their own row for small display sizes."
            },
            {
              "name": "align-items-md",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch'"
              },
              "description": "Aligns contents vertically inside their own row for medium display sizes."
            },
            {
              "name": "align-items-lg",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch'"
              },
              "description": "Aligns contents vertically inside their own row for large display sizes."
            },
            {
              "name": "align-items-xl",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch'"
              },
              "description": "Aligns contents vertically inside their own row for extra-large display sizes."
            },
            {
              "name": "align-items-xxl",
              "value": {
                "type": "'start' | 'center' | 'end' | 'stretch'"
              },
              "description": "Aligns contents vertically inside their own row for extra-extra-large display sizes."
            },
            {
              "name": "gutter",
              "value": {
                "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | string"
              },
              "description": "Adds a gap between contents to make space between them vertically and horizontally."
            },
            {
              "name": "gutter-x",
              "value": {
                "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | string"
              },
              "description": "Adds a gap between contents to make space between them horizontally."
            },
            {
              "name": "gutter-y",
              "value": {
                "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | string"
              },
              "description": "Adds a gap between contents to make space between them vertically."
            },
            {
              "name": "justify-content",
              "value": {
                "type": "'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'"
              },
              "default": "'start'",
              "description": "Justifies contents horizontally."
            },
            {
              "name": "justify-content-xs",
              "value": {
                "type": "'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'"
              },
              "description": "Justifies contents horizontally for extra-small display sizes."
            },
            {
              "name": "justify-content-sm",
              "value": {
                "type": "'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'"
              },
              "description": "Justifies contents horizontally for small display sizes."
            },
            {
              "name": "justify-content-md",
              "value": {
                "type": "'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'"
              },
              "description": "Justifies contents horizontally for medium display sizes."
            },
            {
              "name": "justify-content-lg",
              "value": {
                "type": "'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'"
              },
              "description": "Justifies contents horizontally for large display sizes."
            },
            {
              "name": "justify-content-xl",
              "value": {
                "type": "'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'"
              },
              "description": "Justifies contents horizontally for extra-large display sizes."
            },
            {
              "name": "justify-content-xxl",
              "value": {
                "type": "'start' | 'center' | 'end' | 'between' | 'around' | 'evenly'"
              },
              "description": "Justifies contents horizontally for extra-extra-large display sizes."
            },
            {
              "name": "reverse",
              "value": {
                "type": "boolean"
              },
              "description": "Reverses the flow of contents from left-to-right to right-to-left, or vice-versa."
            },
            {
              "name": "vertical",
              "value": {
                "type": "boolean"
              },
              "description": "Changes the flow of contents from left-to-right to top-to-down."
            },
            {
              "name": "wrap",
              "value": {
                "type": "'on' | 'off' | 'reverse'"
              },
              "default": "'on'",
              "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width."
            },
            {
              "name": "wrap-xs",
              "value": {
                "type": "'on' | 'off' | 'reverse'"
              },
              "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for extra-small screen devices."
            },
            {
              "name": "wrap-sm",
              "value": {
                "type": "'on' | 'off' | 'reverse'"
              },
              "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for small screen devices."
            },
            {
              "name": "wrap-md",
              "value": {
                "type": "'on' | 'off' | 'reverse'"
              },
              "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for medium screen devices."
            },
            {
              "name": "wrap-lg",
              "value": {
                "type": "'on' | 'off' | 'reverse'"
              },
              "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for large screen devices."
            },
            {
              "name": "wrap-xl",
              "value": {
                "type": "'on' | 'off' | 'reverse'"
              },
              "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for extra-large screen devices."
            },
            {
              "name": "wrap-xxl",
              "value": {
                "type": "'on' | 'off' | 'reverse'"
              },
              "description": "Controls allowing the container to wrap the content or not if the cumulative width size of contents is more than the twelve-column width for extra-extra-large screen devices."
            }
          ],
          "description": "It's the most flexible and powerful grid system which you need to build simple to complex responsive layouts, using two main elements, `plus-grid` as a container & `plus-grid-item`. By using these elements, align your content in any form & shape and for all screen sizes with 12 available column sizes and 6 breakpoints.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-grid-item",
          "doc-url": "https://www.htmlplus.io/javascript/element/grid-item",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "alignSelf",
                "default": "'auto'",
                "description": "Aligns the grid-item vertically in its container (grid). It overrides the align-items property of its parent."
              },
              {
                "name": "alignSelfXs",
                "description": "Aligns the grid-item vertically in its container (grid) for extra-small display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for extra-small breakpoints)."
              },
              {
                "name": "alignSelfSm",
                "description": "Aligns the grid-item vertically in its container (grid) for small display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for small breakpoints)."
              },
              {
                "name": "alignSelfMd",
                "description": "Aligns the grid-item vertically in its container (grid) for medium display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for medium breakpoints)."
              },
              {
                "name": "alignSelfLg",
                "description": "Aligns the grid-item vertically in its container (grid) for large display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for large breakpoints)."
              },
              {
                "name": "alignSelfXl",
                "description": "Aligns the grid-item vertically in its container (grid) for extra-large display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for extra-large breakpoints)."
              },
              {
                "name": "alignSelfXxl",
                "description": "Aligns the grid-item vertically in its container (grid) for extra-extra-large display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for extra-extra-large breakpoints)."
              },
              {
                "name": "xs",
                "description": "Specifies the number of columns for extra-small viewports (portrait phones). It also determines the number of columns for bigger display sizes when other upper breakpoints (sm, md, lg, xl and xxl) are not specified."
              },
              {
                "name": "sm",
                "description": "Specifies the number of columns for small viewports (landscape phones). It also determines the number of columns for bigger display sizes when other upper breakpoints (md, lg, xl and xxl) are not specified."
              },
              {
                "name": "md",
                "description": "Specifies the number of columns for medium viewports (tablets). It also determines the number of columns for bigger display sizes when other upper breakpoints (lg, xl and xxl) are not specified."
              },
              {
                "name": "lg",
                "description": "Specifies the number of columns for large viewports (desktop). It also determines the number of columns for bigger display sizes when the upper breakpoint (xl and xxl) is not specified."
              },
              {
                "name": "xl",
                "description": "Specifies the number of columns for large viewports (large desktops). It also determines the number of columns for bigger display sizes when the upper breakpoint (xxl) is not specified."
              },
              {
                "name": "xxl",
                "description": "Specifies the number of columns for extra-extra-large viewports (larger desktops)."
              },
              {
                "name": "hideXs",
                "description": "Hides the grid-item in extra-small display sizes (portrait phones)."
              },
              {
                "name": "hideSm",
                "description": "Hides the grid-item in small display sizes (landscape phones)."
              },
              {
                "name": "hideMd",
                "description": "Hides the grid-item in medium display sizes (tablets)."
              },
              {
                "name": "hideLg",
                "description": "Hides the grid-item in large display sizes (desktop)."
              },
              {
                "name": "hideXl",
                "description": "Hides the grid-item in extra-large display sizes (large desktops)."
              },
              {
                "name": "hideXxl",
                "description": "Hides the grid-item in extra-extra-large display sizes (larger desktops)."
              },
              {
                "name": "hide",
                "description": "Hides the grid-item in all display sizes."
              },
              {
                "name": "hideSmUp",
                "description": "Hides the grid-item in small and larger display sizes."
              },
              {
                "name": "hideMdUp",
                "description": "Hides the grid-item in medium and larger display sizes."
              },
              {
                "name": "hideLgUp",
                "description": "Hides the grid-item in large and larger display sizes."
              },
              {
                "name": "hideXlUp",
                "description": "Hides the grid-item in large and larger display sizes."
              },
              {
                "name": "hideSmDown",
                "description": "Hides the grid-item in small and smaller display sizes."
              },
              {
                "name": "hideMdDown",
                "description": "Hides the grid-item in medium and smaller display sizes."
              },
              {
                "name": "hideLgDown",
                "description": "Hides the grid-item in large and smaller display sizes."
              },
              {
                "name": "hideXlDown",
                "description": "Hides the grid-item in large and smaller display sizes."
              },
              {
                "name": "hideXxlDown",
                "description": "Hides the grid-item in large and smaller display sizes."
              },
              {
                "name": "offsetXs",
                "description": "Adds an offset space before the grid-item for extra-small display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
              },
              {
                "name": "offsetSm",
                "description": "Adds an offset space before the grid-item for small display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
              },
              {
                "name": "offsetMd",
                "description": "Adds an offset space before the grid-item for medium display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
              },
              {
                "name": "offsetLg",
                "description": "Adds an offset space before the grid-item for large display sizes. It also applies to the larger breakpoint (xl) while that is not specified."
              },
              {
                "name": "offsetXl",
                "description": "Adds an offset space before the grid-item for extra-large display sizes."
              },
              {
                "name": "offsetXxl",
                "description": "Adds an offset space before the grid-item for extra-extra-large display sizes."
              },
              {
                "name": "orderXs",
                "description": "Overrides the default order of the grid-item for extra-small display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
              },
              {
                "name": "orderSm",
                "description": "Overrides the default order of the grid-item for small display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
              },
              {
                "name": "orderMd",
                "description": "Overrides the default order of the grid-item for medium display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
              },
              {
                "name": "orderLg",
                "description": "Overrides the default order of the grid-item for large display sizes. It also applies to the larger breakpoint (xl) while that is not specified."
              },
              {
                "name": "orderXl",
                "description": "Overrides the default order of the grid-item for extra-large display sizes."
              },
              {
                "name": "orderXxl",
                "description": "Overrides the default order of the grid-item for extra-extra-large display sizes."
              }
            ]
          },
          "attributes": [
            {
              "name": "align-self",
              "value": {
                "type": "'auto' | 'stretch' | 'start' | 'center' | 'end'"
              },
              "default": "'auto'",
              "description": "Aligns the grid-item vertically in its container (grid). It overrides the align-items property of its parent."
            },
            {
              "name": "align-self-xs",
              "value": {
                "type": "'auto' | 'stretch' | 'start' | 'center' | 'end'"
              },
              "description": "Aligns the grid-item vertically in its container (grid) for extra-small display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for extra-small breakpoints)."
            },
            {
              "name": "align-self-sm",
              "value": {
                "type": "'auto' | 'stretch' | 'start' | 'center' | 'end'"
              },
              "description": "Aligns the grid-item vertically in its container (grid) for small display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for small breakpoints)."
            },
            {
              "name": "align-self-md",
              "value": {
                "type": "'auto' | 'stretch' | 'start' | 'center' | 'end'"
              },
              "description": "Aligns the grid-item vertically in its container (grid) for medium display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for medium breakpoints)."
            },
            {
              "name": "align-self-lg",
              "value": {
                "type": "'auto' | 'stretch' | 'start' | 'center' | 'end'"
              },
              "description": "Aligns the grid-item vertically in its container (grid) for large display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for large breakpoints)."
            },
            {
              "name": "align-self-xl",
              "value": {
                "type": "'auto' | 'stretch' | 'start' | 'center' | 'end'"
              },
              "description": "Aligns the grid-item vertically in its container (grid) for extra-large display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for extra-large breakpoints)."
            },
            {
              "name": "align-self-xxl",
              "value": {
                "type": "'auto' | 'stretch' | 'start' | 'center' | 'end'"
              },
              "description": "Aligns the grid-item vertically in its container (grid) for extra-extra-large display sizes. It also applies to larger breakpoints and display sizes while they are not specified. (It overrides the align-items property of its parent just for extra-extra-large breakpoints)."
            },
            {
              "name": "xs",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | 'auto' | 'grow'"
              },
              "description": "Specifies the number of columns for extra-small viewports (portrait phones). It also determines the number of columns for bigger display sizes when other upper breakpoints (sm, md, lg, xl and xxl) are not specified."
            },
            {
              "name": "sm",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | 'auto' | 'grow'"
              },
              "description": "Specifies the number of columns for small viewports (landscape phones). It also determines the number of columns for bigger display sizes when other upper breakpoints (md, lg, xl and xxl) are not specified."
            },
            {
              "name": "md",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | 'auto' | 'grow'"
              },
              "description": "Specifies the number of columns for medium viewports (tablets). It also determines the number of columns for bigger display sizes when other upper breakpoints (lg, xl and xxl) are not specified."
            },
            {
              "name": "lg",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | 'auto' | 'grow'"
              },
              "description": "Specifies the number of columns for large viewports (desktop). It also determines the number of columns for bigger display sizes when the upper breakpoint (xl and xxl) is not specified."
            },
            {
              "name": "xl",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | 'auto' | 'grow'"
              },
              "description": "Specifies the number of columns for large viewports (large desktops). It also determines the number of columns for bigger display sizes when the upper breakpoint (xxl) is not specified."
            },
            {
              "name": "xxl",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | 'auto' | 'grow'"
              },
              "description": "Specifies the number of columns for extra-extra-large viewports (larger desktops)."
            },
            {
              "name": "hide-xs",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in extra-small display sizes (portrait phones)."
            },
            {
              "name": "hide-sm",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in small display sizes (landscape phones)."
            },
            {
              "name": "hide-md",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in medium display sizes (tablets)."
            },
            {
              "name": "hide-lg",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in large display sizes (desktop)."
            },
            {
              "name": "hide-xl",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in extra-large display sizes (large desktops)."
            },
            {
              "name": "hide-xxl",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in extra-extra-large display sizes (larger desktops)."
            },
            {
              "name": "hide",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in all display sizes."
            },
            {
              "name": "hide-sm-up",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in small and larger display sizes."
            },
            {
              "name": "hide-md-up",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in medium and larger display sizes."
            },
            {
              "name": "hide-lg-up",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in large and larger display sizes."
            },
            {
              "name": "hide-xl-up",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in large and larger display sizes."
            },
            {
              "name": "hide-sm-down",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in small and smaller display sizes."
            },
            {
              "name": "hide-md-down",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in medium and smaller display sizes."
            },
            {
              "name": "hide-lg-down",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in large and smaller display sizes."
            },
            {
              "name": "hide-xl-down",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in large and smaller display sizes."
            },
            {
              "name": "hide-xxl-down",
              "value": {
                "type": "boolean"
              },
              "description": "Hides the grid-item in large and smaller display sizes."
            },
            {
              "name": "offset-xs",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Adds an offset space before the grid-item for extra-small display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
            },
            {
              "name": "offset-sm",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Adds an offset space before the grid-item for small display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
            },
            {
              "name": "offset-md",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Adds an offset space before the grid-item for medium display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
            },
            {
              "name": "offset-lg",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Adds an offset space before the grid-item for large display sizes. It also applies to the larger breakpoint (xl) while that is not specified."
            },
            {
              "name": "offset-xl",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Adds an offset space before the grid-item for extra-large display sizes."
            },
            {
              "name": "offset-xxl",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Adds an offset space before the grid-item for extra-extra-large display sizes."
            },
            {
              "name": "order-xs",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Overrides the default order of the grid-item for extra-small display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
            },
            {
              "name": "order-sm",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Overrides the default order of the grid-item for small display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
            },
            {
              "name": "order-md",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Overrides the default order of the grid-item for medium display sizes. It also applies to larger breakpoints and display sizes while they are not specified."
            },
            {
              "name": "order-lg",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Overrides the default order of the grid-item for large display sizes. It also applies to the larger breakpoint (xl) while that is not specified."
            },
            {
              "name": "order-xl",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Overrides the default order of the grid-item for extra-large display sizes."
            },
            {
              "name": "order-xxl",
              "value": {
                "type": "'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12'"
              },
              "description": "Overrides the default order of the grid-item for extra-extra-large display sizes."
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-icon",
          "doc-url": "https://www.htmlplus.io/javascript/element/icon",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "color",
                "description": "Specifies the color."
              },
              {
                "name": "flip",
                "description": "Flips in `horizontal`, `vertical` or `both` directions."
              },
              {
                "name": "label",
                "description": "Specifies an alternate description to use for assistive devices."
              },
              {
                "name": "name",
                "description": "Specifies the name."
              },
              {
                "name": "resolver",
                "description": "An asynchronous function to load SVG files."
              },
              {
                "name": "rotate",
                "description": "Specifies the rotation."
              },
              {
                "name": "size",
                "description": "Specifies the size."
              }
            ]
          },
          "attributes": [
            {
              "name": "color",
              "value": {
                "type": "string"
              },
              "description": "Specifies the color."
            },
            {
              "name": "flip",
              "value": {
                "type": "'both' | 'horizontal' | 'vertical'"
              },
              "description": "Flips in `horizontal`, `vertical` or `both` directions."
            },
            {
              "name": "label",
              "value": {
                "type": "string"
              },
              "description": "Specifies an alternate description to use for assistive devices."
            },
            {
              "name": "name",
              "value": {
                "type": "string"
              },
              "description": "Specifies the name."
            },
            {
              "name": "resolver",
              "value": {
                "type": "(name: string, parser: IconParser) => Promise<SVGElement | string>"
              },
              "description": "An asynchronous function to load SVG files."
            },
            {
              "name": "rotate",
              "value": {
                "type": "number"
              },
              "description": "Specifies the rotation."
            },
            {
              "name": "size",
              "value": {
                "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl' | '1x' | '2x' | '3x' | '4x' | '5x' | '6x' | '7x' | '8x' | '9x' | (number & {}) | (string & {})"
              },
              "description": "Specifies the size."
            }
          ],
          "description": "A graphical representation of an action, object, or idea that is used in a user interface to provide visual cues and improve the user experience. All icons are based on the popular [Bootstrap Icons](https://icons.getbootstrap.com) library."
        },
        {
          "name": "plus-intersection",
          "doc-url": "https://www.htmlplus.io/javascript/element/intersection",
          "js": {
            "events": [
              {
                "name": "plus-change",
                "description": "Fires When the browser detects that the element has been unveiled or obscured."
              }
            ],
            "properties": [
              {
                "name": "disabled",
                "description": "Disables the element functionality."
              },
              {
                "name": "once",
                "description": "The event fires only once."
              },
              {
                "name": "root",
                "description": "The element that is used as the viewport for checking visibility of the target. Must be the ancestor of the target. Defaults to the browser viewport if not specified or if `null`."
              },
              {
                "name": "rootMargin",
                "description": "Margin around the root. Can have values similar to the CSS [margin](https://mdn.io/margin) property, e.g. `\"10px 20px 30px 40px\"` (top, right, bottom, left). The values can be percentages. This set of values serves to grow or shrink each side of the root element's bounding box before computing intersections. Defaults to all zeros."
              },
              {
                "name": "threshold",
                "description": "Either a single number or an array of numbers which indicate at what percentage of the target's visibility the observer's callback should be executed. If you only want to detect when visibility passes the 50% mark, you can use a value of 0.5. If you want the callback to run every time visibility passes another 25%, you would specify the array [0, 0.25, 0.5, 0.75, 1]. The default is 0 (meaning as soon as even one pixel is visible, the callback will be run). A value of 1.0 means that the threshold isn't considered passed until every pixel is visible."
              }
            ]
          },
          "attributes": [
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "Disables the element functionality."
            },
            {
              "name": "once",
              "value": {
                "type": "boolean"
              },
              "description": "The event fires only once."
            },
            {
              "name": "root",
              "value": {
                "type": "Element"
              },
              "description": "The element that is used as the viewport for checking visibility of the target. Must be the ancestor of the target. Defaults to the browser viewport if not specified or if `null`."
            },
            {
              "name": "root-margin",
              "value": {
                "type": "string"
              },
              "description": "Margin around the root. Can have values similar to the CSS [margin](https://mdn.io/margin) property, e.g. `\"10px 20px 30px 40px\"` (top, right, bottom, left). The values can be percentages. This set of values serves to grow or shrink each side of the root element's bounding box before computing intersections. Defaults to all zeros."
            },
            {
              "name": "threshold",
              "value": {
                "type": "number | number[]"
              },
              "description": "Either a single number or an array of numbers which indicate at what percentage of the target's visibility the observer's callback should be executed. If you only want to detect when visibility passes the 50% mark, you can use a value of 0.5. If you want the callback to run every time visibility passes another 25%, you would specify the array [0, 0.25, 0.5, 0.75, 1]. The default is 0 (meaning as soon as even one pixel is visible, the callback will be run). A value of 1.0 means that the threshold isn't considered passed until every pixel is visible."
            }
          ],
          "description": "The [Intersection Observer API](https://mdn.io/intersection-observer-api) provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's [viewport](https://mdn.io/glossary-viewport).",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-progress-bar",
          "doc-url": "https://www.htmlplus.io/javascript/element/progress-bar",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "buffer",
                "description": "Specifies the secondary progress of the bar by a number between `min` and `max`."
              },
              {
                "name": "color",
                "description": "Specifies the color of the bar."
              },
              {
                "name": "label",
                "description": "Displays the progress percentage."
              },
              {
                "name": "min",
                "default": "0",
                "description": "Specifies the minimum value of the progress."
              },
              {
                "name": "max",
                "default": "100",
                "description": "Specifies the maximum value of the progress."
              },
              {
                "name": "sync",
                "description": "Eliminates delays in updating value."
              },
              {
                "name": "variant",
                "description": "TODO"
              },
              {
                "name": "value",
                "default": "0",
                "description": "Specifies the progress of the bar by a number between `min` and `max`."
              }
            ]
          },
          "attributes": [
            {
              "name": "buffer",
              "value": {
                "type": "number"
              },
              "description": "Specifies the secondary progress of the bar by a number between `min` and `max`."
            },
            {
              "name": "color",
              "value": {
                "type": "string"
              },
              "description": "Specifies the color of the bar."
            },
            {
              "name": "label",
              "value": {
                "type": "boolean"
              },
              "description": "Displays the progress percentage."
            },
            {
              "name": "min",
              "value": {
                "type": "number"
              },
              "default": "0",
              "description": "Specifies the minimum value of the progress."
            },
            {
              "name": "max",
              "value": {
                "type": "number"
              },
              "default": "100",
              "description": "Specifies the maximum value of the progress."
            },
            {
              "name": "sync",
              "value": {
                "type": "boolean"
              },
              "description": "Eliminates delays in updating value."
            },
            {
              "name": "variant",
              "value": {
                "type": "string"
              },
              "description": "TODO"
            },
            {
              "name": "value",
              "value": {
                "type": "number"
              },
              "default": "0",
              "description": "Specifies the progress of the bar by a number between `min` and `max`."
            }
          ],
          "description": "Progress bar expresses an unspecified wait time or display the length of a process.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-progress-bar-stack",
          "doc-url": "https://www.htmlplus.io/javascript/element/progress-bar-stack",
          "js": {
            "events": [],
            "properties": []
          },
          "attributes": [],
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-relative-time",
          "doc-url": "https://www.htmlplus.io/javascript/element/relative-time",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "format",
                "default": "'long'",
                "description": "The format style for the relative time."
              },
              {
                "name": "numeric",
                "default": "'auto'",
                "description": "Determines whether the numeric value should always be displayed."
              },
              {
                "name": "sync",
                "default": false,
                "description": "Determines whether the relative time should be updated automatically."
              },
              {
                "name": "value",
                "description": "The date and time to be displayed in a relative format."
              }
            ]
          },
          "attributes": [
            {
              "name": "format",
              "value": {
                "type": "'long' | 'short' | 'narrow'"
              },
              "default": "'long'",
              "description": "The format style for the relative time."
            },
            {
              "name": "numeric",
              "value": {
                "type": "'always' | 'auto'"
              },
              "default": "'auto'",
              "description": "Determines whether the numeric value should always be displayed."
            },
            {
              "name": "sync",
              "value": {
                "type": "boolean"
              },
              "default": false,
              "description": "Determines whether the relative time should be updated automatically."
            },
            {
              "name": "value",
              "value": {
                "type": "Date"
              },
              "description": "The date and time to be displayed in a relative format."
            }
          ],
          "description": "Outputs a localized time phrase relative to the provided datetime."
        },
        {
          "name": "plus-scroll-detector",
          "doc-url": "https://www.htmlplus.io/javascript/element/scroll-detector",
          "js": {
            "events": [
              {
                "name": "plus-change",
                "description": "Fires when the scroll starts changing."
              }
            ],
            "properties": [
              {
                "name": "disabled",
                "description": "Disables the element functionality."
              },
              {
                "name": "reference",
                "default": "'document'",
                "description": "Specifies the reference of the scroll."
              },
              {
                "name": "vertical",
                "description": "Indicates which scroll (horizontal or vertical) is to be used as the source."
              }
            ]
          },
          "attributes": [
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "Disables the element functionality."
            },
            {
              "name": "reference",
              "value": {
                "type": "Element | 'document' | (string & {})"
              },
              "default": "'document'",
              "description": "Specifies the reference of the scroll."
            },
            {
              "name": "vertical",
              "value": {
                "type": "boolean"
              },
              "description": "Indicates which scroll (horizontal or vertical) is to be used as the source."
            }
          ],
          "description": "Detects scroll event from an element."
        },
        {
          "name": "plus-signature",
          "doc-url": "https://www.htmlplus.io/javascript/element/signature",
          "js": {
            "events": [
              {
                "name": "plus-change",
                "description": "Fires after the latest changes have occurred with a delay to prepare the value."
              },
              {
                "name": "plus-after",
                "description": "Fires after updating the stroke."
              },
              {
                "name": "plus-before",
                "description": "Fires before updating the stroke."
              },
              {
                "name": "plus-end",
                "description": "Fires after a stroke ends."
              },
              {
                "name": "plus-start",
                "description": "Fires before a stroke starts."
              }
            ],
            "properties": [
              {
                "name": "backgroundColor",
                "default": "'lightgray'",
                "description": "Specifies the background color."
              },
              {
                "name": "clearOnResize",
                "description": "Clears the canvas after resizing."
              },
              {
                "name": "color",
                "default": "'black'",
                "description": "Specifies the color of the strokes."
              },
              {
                "name": "distance",
                "description": "Specifies the distance between the previous point and the next one."
              },
              {
                "name": "dotSize",
                "description": "Specifies the radius of a single dot."
              },
              {
                "name": "maxWidth",
                "default": "2.5",
                "description": "Specifies the maximum width of the strokes."
              },
              {
                "name": "minWidth",
                "default": "0.5",
                "description": "Specifies the minimum width of the strokes."
              },
              {
                "name": "resizable",
                "description": "Observes the element dimensions to apply new changes on the canvas."
              },
              {
                "name": "throttle",
                "default": "16",
                "description": "Specifies the time distance between the previous point and the next one."
              },
              {
                "name": "value",
                "description": "Gets/Sets data."
              },
              {
                "name": "velocity",
                "default": "0.7",
                "description": "Specifies the velocity based on the previous velocity."
              },
              {
                "name": "canvas",
                "description": "The canvas element."
              },
              {
                "name": "redoable",
                "description": "Specifies whether redo can be performed or not."
              },
              {
                "name": "undoable",
                "description": "Specifies whether undo can be performed or not."
              },
              {
                "name": "redo",
                "description": "Reverts the last undo action."
              },
              {
                "name": "resize",
                "description": "Syncs the canvas dimensions with the element dimensions."
              },
              {
                "name": "undo",
                "description": "Reverts the last action."
              }
            ]
          },
          "attributes": [
            {
              "name": "background-color",
              "value": {
                "type": "string"
              },
              "default": "'lightgray'",
              "description": "Specifies the background color."
            },
            {
              "name": "clear-on-resize",
              "value": {
                "type": "boolean"
              },
              "description": "Clears the canvas after resizing."
            },
            {
              "name": "color",
              "value": {
                "type": "string"
              },
              "default": "'black'",
              "description": "Specifies the color of the strokes."
            },
            {
              "name": "distance",
              "value": {
                "type": "number"
              },
              "description": "Specifies the distance between the previous point and the next one."
            },
            {
              "name": "dot-size",
              "value": {
                "type": "number"
              },
              "description": "Specifies the radius of a single dot."
            },
            {
              "name": "max-width",
              "value": {
                "type": "number"
              },
              "default": "2.5",
              "description": "Specifies the maximum width of the strokes."
            },
            {
              "name": "min-width",
              "value": {
                "type": "number"
              },
              "default": "0.5",
              "description": "Specifies the minimum width of the strokes."
            },
            {
              "name": "resizable",
              "value": {
                "type": "boolean"
              },
              "description": "Observes the element dimensions to apply new changes on the canvas."
            },
            {
              "name": "throttle",
              "value": {
                "type": "number"
              },
              "default": "16",
              "description": "Specifies the time distance between the previous point and the next one."
            },
            {
              "name": "value",
              "value": {
                "type": "string"
              },
              "description": "Gets/Sets data."
            },
            {
              "name": "velocity",
              "value": {
                "type": "number"
              },
              "default": "0.7",
              "description": "Specifies the velocity based on the previous velocity."
            },
            {
              "name": "canvas",
              "value": {
                "type": ""
              },
              "description": "The canvas element."
            },
            {
              "name": "redoable",
              "value": {
                "type": ""
              },
              "description": "Specifies whether redo can be performed or not."
            },
            {
              "name": "undoable",
              "value": {
                "type": ""
              },
              "description": "Specifies whether undo can be performed or not."
            }
          ],
          "description": "Allows user to draw smooth signatures."
        },
        {
          "name": "plus-spacer",
          "doc-url": "https://www.htmlplus.io/javascript/element/spacer",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "grow",
                "default": "1",
                "description": "TODO"
              }
            ]
          },
          "attributes": [
            {
              "name": "grow",
              "value": {
                "type": "number"
              },
              "default": "1",
              "description": "TODO"
            }
          ],
          "description": "TODO"
        },
        {
          "name": "plus-spinner",
          "doc-url": "https://www.htmlplus.io/javascript/element/spinner",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "color",
                "description": "Specifies the color."
              },
              {
                "name": "size",
                "default": "'inherit'",
                "description": "Specifies the size of the spinner."
              },
              {
                "name": "type",
                "default": "'default'",
                "description": "Specifies which variant of the spinner to use."
              }
            ]
          },
          "attributes": [
            {
              "name": "color",
              "value": {
                "type": "string"
              },
              "description": "Specifies the color."
            },
            {
              "name": "size",
              "value": {
                "type": "'inherit' | 'sm' | 'md' | 'lg'"
              },
              "default": "'inherit'",
              "description": "Specifies the size of the spinner."
            },
            {
              "name": "type",
              "value": {
                "type": "'default' | 'double-bounce' | 'dual-ring' | 'ring' | 'ripple' | 'square'"
              },
              "default": "'default'",
              "description": "Specifies which variant of the spinner to use."
            }
          ],
          "description": "An indicator of progress and activity."
        },
        {
          "name": "plus-stack",
          "doc-url": "https://www.htmlplus.io/javascript/element/stack",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "gap",
                "description": "The gap between items."
              },
              {
                "name": "items",
                "default": "'center'",
                "description": "The alignment of items along the cross axis."
              },
              {
                "name": "justify",
                "default": "'center'",
                "description": "The distribution of items along the main axis."
              },
              {
                "name": "reverse",
                "description": "Whether to reverse the order of items."
              },
              {
                "name": "vertical",
                "description": "Whether the stack is vertical."
              }
            ]
          },
          "attributes": [
            {
              "name": "gap",
              "value": {
                "type": "number | string"
              },
              "description": "The gap between items."
            },
            {
              "name": "items",
              "value": {
                "type": "'start' | 'end' | 'center' | 'baseline' | 'stretch'"
              },
              "default": "'center'",
              "description": "The alignment of items along the cross axis."
            },
            {
              "name": "justify",
              "value": {
                "type": "'normal' | 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly' | 'stretch'"
              },
              "default": "'center'",
              "description": "The distribution of items along the main axis."
            },
            {
              "name": "reverse",
              "value": {
                "type": "boolean"
              },
              "description": "Whether to reverse the order of items."
            },
            {
              "name": "vertical",
              "value": {
                "type": "boolean"
              },
              "description": "Whether the stack is vertical."
            }
          ],
          "description": "A container for arranging elements vertically or horizontally.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-sticky",
          "doc-url": "https://www.htmlplus.io/javascript/element/sticky",
          "js": {
            "events": [
              {
                "name": "plus-change",
                "description": "Fires when the state is changed. To enable, set the `watcher` property to `true`."
              }
            ],
            "properties": [
              {
                "name": "top",
                "default": "0",
                "description": "Specifies the space from top."
              },
              {
                "name": "watcher",
                "description": "To active `state` attribute, `change` event, `normal` slot, or `stick` slot, Set it to `true`."
              },
              {
                "name": "zIndex",
                "description": "Specifies the z-index."
              }
            ]
          },
          "attributes": [
            {
              "name": "top",
              "value": {
                "type": "string | number"
              },
              "default": "0",
              "description": "Specifies the space from top."
            },
            {
              "name": "watcher",
              "value": {
                "type": "boolean"
              },
              "description": "To active `state` attribute, `change` event, `normal` slot, or `stick` slot, Set it to `true`."
            },
            {
              "name": "z-index",
              "value": {
                "type": "number"
              },
              "description": "Specifies the z-index."
            }
          ],
          "description": "Element content is positioned based on the user's scroll position.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            },
            {
              "name": "normal",
              "description": "Activated when the state becomes `normal`. To enable, set the `watcher` property to `true`."
            },
            {
              "name": "stick",
              "description": "Activated when the state becomes `stick`. To enable, set the `watcher` property to `true`."
            }
          ]
        },
        {
          "name": "plus-switch",
          "doc-url": "https://www.htmlplus.io/javascript/element/switch",
          "js": {
            "events": [
              {
                "name": "plus-change",
                "description": "When the switch state is changed this event triggers."
              }
            ],
            "properties": [
              {
                "name": "checked",
                "description": "Puts the switch in checked state."
              },
              {
                "name": "disabled",
                "description": "Disables the switch."
              }
            ]
          },
          "attributes": [
            {
              "name": "checked",
              "value": {
                "type": "boolean"
              },
              "description": "Puts the switch in checked state."
            },
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "Disables the switch."
            }
          ],
          "description": "Toggles the state of a single item on or off."
        },
        {
          "name": "plus-tabs",
          "doc-url": "https://www.htmlplus.io/javascript/element/tabs",
          "js": {
            "events": [
              {
                "name": "plus-change",
                "description": "Fired when the value changes."
              }
            ],
            "properties": [
              {
                "name": "value",
                "description": "Provides your own value."
              },
              {
                "name": "vertical",
                "description": "You can use vertical property for vertical mode."
              }
            ]
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "type": "number | string"
              },
              "description": "Provides your own value."
            },
            {
              "name": "vertical",
              "value": {
                "type": "boolean"
              },
              "description": "You can use vertical property for vertical mode."
            }
          ],
          "description": "Organizes content across different screens.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-tabs-bar",
          "doc-url": "https://www.htmlplus.io/javascript/element/tabs-bar",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "grow",
                "description": "Grows tabs as much as all available space (occupies all horizontal space)."
              },
              {
                "name": "justify",
                "default": "'start'",
                "description": "Specifies how the tabs are aligned."
              },
              {
                "name": "reverse",
                "description": "Reverses the arrangement of the tabs."
              }
            ]
          },
          "attributes": [
            {
              "name": "grow",
              "value": {
                "type": "boolean"
              },
              "description": "Grows tabs as much as all available space (occupies all horizontal space)."
            },
            {
              "name": "justify",
              "value": {
                "type": "'start' | 'center' | 'end'"
              },
              "default": "'start'",
              "description": "Specifies how the tabs are aligned."
            },
            {
              "name": "reverse",
              "value": {
                "type": "boolean"
              },
              "description": "Reverses the arrangement of the tabs."
            }
          ],
          "description": "TODO: Arranges tabs within a bar.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-tabs-panel",
          "doc-url": "https://www.htmlplus.io/javascript/element/tabs-panel",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "value",
                "description": "Provides your own value."
              },
              {
                "name": "active",
                "description": "TODO"
              }
            ]
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "type": "number | string"
              },
              "description": "Provides your own value."
            },
            {
              "name": "active",
              "value": {
                "type": ""
              },
              "description": "TODO"
            }
          ],
          "description": "TODO: This element contains the contents of each tab and when the tab is activated the panel is displayed.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-tabs-panels",
          "doc-url": "https://www.htmlplus.io/javascript/element/tabs-panels",
          "js": {
            "events": [],
            "properties": []
          },
          "attributes": [],
          "description": "TODO: This element contains panels.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-tabs-tab",
          "doc-url": "https://www.htmlplus.io/javascript/element/tabs-tab",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "disabled",
                "description": "A Tab can be disabled by setting disabled property."
              },
              {
                "name": "value",
                "description": "Provides your own value."
              },
              {
                "name": "active",
                "description": "TODO"
              }
            ]
          },
          "attributes": [
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "A Tab can be disabled by setting disabled property."
            },
            {
              "name": "value",
              "value": {
                "type": "number | string"
              },
              "description": "Provides your own value."
            },
            {
              "name": "active",
              "value": {
                "type": ""
              },
              "description": "TODO"
            }
          ],
          "description": "TODO: Tabs make it easy to switch between different views.",
          "slots": [
            {
              "name": "default",
              "description": "The default slot."
            }
          ]
        },
        {
          "name": "plus-tooltip",
          "doc-url": "https://www.htmlplus.io/javascript/element/tooltip",
          "js": {
            "events": [],
            "properties": [
              {
                "name": "arrow",
                "description": "Specifies whether to display the arrow or not."
              },
              {
                "name": "delay",
                "description": "Specifies a delay in milliseconds for show or hide. Use a number for both show and hide or create an array of two separate numbers for show and hide."
              },
              {
                "name": "disabled",
                "description": "Disables the element functionality."
              },
              {
                "name": "fixed",
                "description": "TODO"
              },
              {
                "name": "offset",
                "description": "TODO"
              },
              {
                "name": "placement",
                "description": "Specifies the display location of the element relative to the reference."
              },
              {
                "name": "reference",
                "default": "'previous'",
                "description": "Specifies the element to which the tooltip will be attached. Use `next` to attach to the next sibling. Use `parent` to attach to the parent. Use `previous` to attach to the previous sibling. Use a string to find an element to attach to that. Use an element to attach to that."
              },
              {
                "name": "trigger",
                "description": "Specifies the activation method."
              },
              {
                "name": "z",
                "default": "'auto'",
                "description": "TODO"
              },
              {
                "name": "hide",
                "description": "Hides the element."
              },
              {
                "name": "show",
                "description": "Shows the element."
              },
              {
                "name": "update",
                "description": "Updates the element's position."
              }
            ]
          },
          "attributes": [
            {
              "name": "arrow",
              "value": {
                "type": "boolean"
              },
              "description": "Specifies whether to display the arrow or not."
            },
            {
              "name": "delay",
              "value": {
                "type": "number | [number, number]"
              },
              "description": "Specifies a delay in milliseconds for show or hide. Use a number for both show and hide or create an array of two separate numbers for show and hide."
            },
            {
              "name": "disabled",
              "value": {
                "type": "boolean"
              },
              "description": "Disables the element functionality."
            },
            {
              "name": "fixed",
              "value": {
                "type": "boolean"
              },
              "description": "TODO"
            },
            {
              "name": "offset",
              "value": {
                "type": "number | [number, number]"
              },
              "description": "TODO"
            },
            {
              "name": "placement",
              "value": {
                "type": "'top' | 'top-left' | 'top-right' | 'top-start' | 'top-end' | 'right' | 'right-top' | 'right-bottom' | 'bottom' | 'bottom-left' | 'bottom-right' | 'bottom-start' | 'bottom-end' | 'left' | 'left-top' | 'left-bottom' | 'start' | 'start-top' | 'start-bottom' | 'end' | 'end-top' | 'end-bottom'"
              },
              "description": "Specifies the display location of the element relative to the reference."
            },
            {
              "name": "reference",
              "value": {
                "type": "Element | 'next' | 'parent' | 'previous' | (string & {})"
              },
              "default": "'previous'",
              "description": "Specifies the element to which the tooltip will be attached. Use `next` to attach to the next sibling. Use `parent` to attach to the parent. Use `previous` to attach to the previous sibling. Use a string to find an element to attach to that. Use an element to attach to that."
            },
            {
              "name": "trigger",
              "value": {
                "type": "'click' | 'focus' | 'hover' | 'manual' | Array<TooltipTrigger>"
              },
              "description": "Specifies the activation method."
            },
            {
              "name": "z",
              "value": {
                "type": "'auto' | 'vertical' | 'horizontal' | 'move'"
              },
              "default": "'auto'",
              "description": "TODO"
            }
          ],
          "description": "TODO."
        }
      ]
    }
  }
}
